% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netviewOptions.R
\name{netviewOptions}
\alias{netviewOptions}
\title{NetView Options}
\usage{
netviewOptions(...)
}
\arguments{
\item{mknnWeights}{Construct networks with weighted edges, using the distance value from the input matrix [ bool, TRUE ]}

\item{mknnAlgorithm}{Algorithm for mutual nearest neighbour search [ str, "cover_tree" ]}

\item{selectionTitle}{Title for community k-Plot in plotSelection() [ str, "Community k-Plot"]}

\item{selectionPlot}{Configure x- and y-axis breaks and line width of k-Plot [ int vector, c(5, 20, 1) ]}

\item{nodeID}{Name of column in metaData defining IDs [ str, "ID" ]}

\item{nodeGroup}{Name of column in metaData defining sample groups [ str, "Group" ]}

\item{nodeColour}{Name of column in metaData defining sample colours [ str, "Colour" ]}

\item{d3.nodeSize}{Name of column in metaData defining node sizes for networkD3 [ str, "Size" ]}

\item{d3.height}{Height of widget networkD3 [ numeric, NULL ]}

\item{d3.width}{Width of widget networkD3 [ numeric, NULL ]}

\item{d3.colourScale}{Colour scale to use for groups in networkD3 [ str, NULL ]}

\item{d3.fontSize}{Font size for labels in networkD3 [ int, 7 ]}

\item{d3.fontFamily}{Font family for labels in networkD3 [ str, "times" ]}

\item{d3.linkDistance}{Edge distance for force-directed layout in networkD3 [ int, 50 ]}

\item{d3.linkWidth}{JS function to determine edge width [ str, "function(d) { return Math.sqrt(d.value); }" ]}

\item{d3.radiusCalculation}{JS expression to determine node radius [ str, "Math.sqrt(d.nodesize)+6" ]}

\item{d3.charge}{Charge parameter for force-directed layout networkD3 [ int, -120 ]}

\item{d3.linkColour}{Colour od edges for networkD3 [ str, "#666" ]}

\item{d3.opacity}{Node opacity for networkD3 [ numeric, 0.8 ]}

\item{d3.zoom}{Zoom for networkD3 [ bool, TRUE ]}

\item{d3.legend}{Legend for networkD3, using Groups [ bool, FALSE ]}

\item{d3.bounded}{Bounds for networkD3 [ bool, FALSE ]}

\item{d3.opacityNoHover}{Opacity change when hovering in networkD3 [ numeric, 0 ]}

\item{d3.clickAction}{JS function for clicking a node in networkD3 [ str, NULL ]}

\item{d3.linkX}{Multiplier for link distance, use instead of specifiying JS function in d3.linkWidth [ numeric, 20 ]}

\item{communityAlgorithms}{Algorithms for community detection analysis [ str vector, c("Walktrap", "Infomap", "Fast-Greedy") ]}
}
\value{
List of options for NetView.
}
\description{
Generate options for NetView.
}
\details{
For examples and tutorials, please see our GitHub Repository: \url{https://github.com/esteinig/netview}
\itemize{
   \item{Allowed community-detection algorithm names are "Walktrap", "Infomap", "Fast-Greedy", "Edge Betweenness", "Label Propagation", "Louvain" and "Leading Eigenvector"}
   \item{Allowed mutual nearest neighbour search algorithms, as implemented in nng from package cccd are "cover_tree", "kd_tree", "CR", "brute"}
}
}

